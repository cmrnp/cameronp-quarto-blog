{
  "hash": "b9c4cf83ab7a57e6f8c92c02b66aa6be",
  "result": {
    "markdown": "---\ntitle: \"Fitting many statistical models at once using dplyr\"\nauthor: \"Cameron Patrick\"\ndate: \"2023-06-08\"\ndraft: false\ncategories: [r, statistical-models]\n---\n\n\n\n\nOne common task in applied statistics is to fit and interpret a number of statistical models at once. For example, fitting a model with the same structure to a number of different outcome or explanatory variables, or fitting several models with different structure to the same data. Here are some examples of how I usually do this, using features that were introduced with `dplyr` version 1.1.0.\n\nFor this demonstration, we'll be using the R packages `dplyr`, `tidyr`, `ggplot2` (all of which are included in the `tidyverse`), as well as `gt` for making tables, `emmeans` for obtaining estimated means and comparisons, and `performance` for model-checking.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(emmeans)\nlibrary(performance)\n```\n:::\n\n\n\n\nWe'll be using the [Palmer Penguins data](https://allisonhorst.github.io/palmerpenguins/) collected at Palmer Station, Antarctica, made available by Dr Kristen Gorman, and conveniently accessible in R using the `palmerpenguins` package. This dataset contains measurements on a number of penguins of different species on different islands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\ndata(penguins)\nhead(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\nSuppose we want to compare bill length, bill depth, flipper length, and body mass between species. We could manually run a separate model for each, but here's a way to to automate the process. As with many things in R, the trick to doing this easily is to get the data in long form, with the outcomes stacked on top of each other, and a variable indicating which outcome is being measured.\n\nThe `pivot_longer()` function from `tidyr` gets the data into this format. I've also taken an extra step of recoding the \"outcome\" variable to give more descriptive labels. This isn't required but it will make the tables and plots that we make later look nicer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_long <- penguins %>%\n  pivot_longer(\n    c(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g),\n    names_to = \"outcome\",\n    values_to = \"value\"\n  ) %>%\n  mutate(\n    outcome = fct_inorder(outcome),\n    outcome = fct_recode(\n      outcome,\n      \"Bill length (mm)\" = \"bill_length_mm\",\n      \"Bill depth (mm)\" = \"bill_depth_mm\",\n      \"Flipper length (mm)\" = \"flipper_length_mm\",\n      \"Body mass (g)\" = \"body_mass_g\"\n    )\n  )\n```\n:::\n\n\nLooking at the first few rows of this data frame, you can see we now have four rows for each penguin, one for each type of measurement:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(penguins_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  species island    sex     year outcome              value\n  <fct>   <fct>     <fct>  <int> <fct>                <dbl>\n1 Adelie  Torgersen male    2007 Bill length (mm)      39.1\n2 Adelie  Torgersen male    2007 Bill depth (mm)       18.7\n3 Adelie  Torgersen male    2007 Flipper length (mm)  181  \n4 Adelie  Torgersen male    2007 Body mass (g)       3750  \n5 Adelie  Torgersen female  2007 Bill length (mm)      39.5\n6 Adelie  Torgersen female  2007 Bill depth (mm)       17.4\n```\n:::\n:::\n\n\nWe can use `group_by()` and `summarise()` from the `dplyr` package to group the rows by outcome, and then \"summarise\" these groups of rows down to a single row containing a statistical model for each outcome. This makes use of a couple of R tricks: 'list columns', a column in a data frame that contains a more complex object than the standard R data types (numeric, character, etc); and the new `pick()` verb which returns a data frame containing selected columns (in this case, all of them) within the group that's being operated on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_models <- penguins_long %>%\n  group_by(outcome) %>%\n  summarise(\n    model = list(\n      lm(value ~ species, data = pick(everything()))\n    )\n  )\n```\n:::\n\n\nYou can see the resulting data from contains four rows, one for each outcome, and a statistical model (\"lm\") for each:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(penguin_models)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  outcome             model \n  <fct>               <list>\n1 Bill length (mm)    <lm>  \n2 Bill depth (mm)     <lm>  \n3 Flipper length (mm) <lm>  \n4 Body mass (g)       <lm>  \n```\n:::\n:::\n\n\nIdeally we would also do a visual check of model assumptions. One way to do this is something like the code below, which saves a residual plot for each model to an image file, which can be inspected later. It uses the `check_model()` function in the `performance` package to generate the plots. The generated residual plots aren't shown here, but they all look fine.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwalk2(\n  penguin_models$outcome, \n  penguin_models$model,\n  ~ ggsave(\n    paste0(.x, \".png\"),\n    plot(check_model(.y, check = c(\"pp_check\", \"linearity\",\n                                   \"homogeneity\", \"qq\"))),\n    width = 12,\n    height = 9\n  )\n)\n```\n:::\n\n\nOnce we've fitted the models, we can obtain quantities of interest from them. In this example we'll look at estimated means for each species, p-values testing the hypothesis that all species means are equal (against at least one pair of means being different), and comparisons (differences in means) between all pairs of species.\n\nThe `reframe()` function from `dplyr` allows us to run some code that produces a data frame on each model and stack the results on top of each other. We can use the `emmeans()` function from the `emmeans` package to obtain estimated marginal means and `as_tibble()` to convert the result into a data frame. The `rowwise(outcome)` at the start tells `reframe()` that we want to call `emmeans()` separately for each row of the data frame (i.e., each outcome model), and preserve the `outcome` variable in the result.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_means <- penguin_models %>%\n  rowwise(outcome) %>%\n  reframe(\n    emmeans(model, \"species\") %>%\n      as_tibble()\n  )\n```\n:::\n\n\nThe first few rows of the resulting data frame look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(penguin_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  outcome          species   emmean     SE    df lower.CL upper.CL\n  <fct>            <fct>      <dbl>  <dbl> <dbl>    <dbl>    <dbl>\n1 Bill length (mm) Adelie      38.8 0.241    339     38.3     39.3\n2 Bill length (mm) Chinstrap   48.8 0.359    339     48.1     49.5\n3 Bill length (mm) Gentoo      47.5 0.267    339     47.0     48.0\n4 Bill depth (mm)  Adelie      18.3 0.0912   339     18.2     18.5\n5 Bill depth (mm)  Chinstrap   18.4 0.136    339     18.2     18.7\n6 Bill depth (mm)  Gentoo      15.0 0.101    339     14.8     15.2\n```\n:::\n:::\n\n\nWe can use `ggplot()` to present the results visually. The plot shows that there's a huge variation between species in means of all of these measurements.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_means %>%\n  ggplot(aes(x = emmean, y = species, xmin = lower.CL, xmax = upper.CL)) +\n  geom_errorbar(width = 0.5) +\n  geom_point() +\n  scale_y_discrete(limits = rev) +\n  facet_wrap(vars(outcome), nrow = 2, scales = \"free_x\") +\n  labs(\n    x = \"Mean\", \n    y = \"Species\",\n    caption = \"Error bars show 95% confidence interval for mean.\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=1170}\n:::\n:::\n\n\nThe `gt()` function can be used to produce a nice table of results. The code shown below combines the `lower.CL` and `upper.CL` columns to produce a single column with the confidence interval, and separately specifies fewer decimal places for body mass than the other measures. The `group_by()` function before `gt()` results in a table sub-heading for each outcome. You could easily change this to `group_by(species)` to arrange the results by species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_means %>%\n  group_by(outcome) %>%\n  gt() %>%\n  fmt_number(c(emmean, SE, lower.CL, upper.CL),\n             decimals = 1, use_seps = FALSE) %>%\n  fmt_number(c(emmean, SE, lower.CL, upper.CL),\n             rows = outcome == \"Body mass (g)\",\n             decimals = 0, use_seps = FALSE) %>%\n  fmt_number(df, decimals = 0) %>%\n  cols_align(\"left\", species) %>%\n  cols_merge_range(lower.CL, upper.CL, sep = \", \") %>%\n  cols_label(\n    species = \"Species\",\n    emmean = \"Mean\",\n    lower.CL = \"95% Confidence Interval\"\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"qqzlcfstph\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#qqzlcfstph table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#qqzlcfstph thead, #qqzlcfstph tbody, #qqzlcfstph tfoot, #qqzlcfstph tr, #qqzlcfstph td, #qqzlcfstph th {\n  border-style: none;\n}\n\n#qqzlcfstph p {\n  margin: 0;\n  padding: 0;\n}\n\n#qqzlcfstph .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#qqzlcfstph .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#qqzlcfstph .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#qqzlcfstph .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#qqzlcfstph .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#qqzlcfstph .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#qqzlcfstph .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#qqzlcfstph .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#qqzlcfstph .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#qqzlcfstph .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#qqzlcfstph .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qqzlcfstph .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#qqzlcfstph .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#qqzlcfstph .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#qqzlcfstph .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qqzlcfstph .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#qqzlcfstph .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#qqzlcfstph .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#qqzlcfstph .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qqzlcfstph .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#qqzlcfstph .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qqzlcfstph .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#qqzlcfstph .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qqzlcfstph .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qqzlcfstph .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qqzlcfstph .gt_left {\n  text-align: left;\n}\n\n#qqzlcfstph .gt_center {\n  text-align: center;\n}\n\n#qqzlcfstph .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#qqzlcfstph .gt_font_normal {\n  font-weight: normal;\n}\n\n#qqzlcfstph .gt_font_bold {\n  font-weight: bold;\n}\n\n#qqzlcfstph .gt_font_italic {\n  font-style: italic;\n}\n\n#qqzlcfstph .gt_super {\n  font-size: 65%;\n}\n\n#qqzlcfstph .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#qqzlcfstph .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#qqzlcfstph .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#qqzlcfstph .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#qqzlcfstph .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#qqzlcfstph .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#qqzlcfstph .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Species\">Species</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Mean\">Mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SE\">SE</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"df\">df</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"95% Confidence Interval\">95% Confidence Interval</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Bill length (mm)\">Bill length (mm)</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Bill length (mm)  species\" class=\"gt_row gt_left\">Adelie</td>\n<td headers=\"Bill length (mm)  emmean\" class=\"gt_row gt_right\">38.8</td>\n<td headers=\"Bill length (mm)  SE\" class=\"gt_row gt_right\">0.2</td>\n<td headers=\"Bill length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill length (mm)  lower.CL\" class=\"gt_row gt_right\">38.3, 39.3</td></tr>\n    <tr><td headers=\"Bill length (mm)  species\" class=\"gt_row gt_left\">Chinstrap</td>\n<td headers=\"Bill length (mm)  emmean\" class=\"gt_row gt_right\">48.8</td>\n<td headers=\"Bill length (mm)  SE\" class=\"gt_row gt_right\">0.4</td>\n<td headers=\"Bill length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill length (mm)  lower.CL\" class=\"gt_row gt_right\">48.1, 49.5</td></tr>\n    <tr><td headers=\"Bill length (mm)  species\" class=\"gt_row gt_left\">Gentoo</td>\n<td headers=\"Bill length (mm)  emmean\" class=\"gt_row gt_right\">47.5</td>\n<td headers=\"Bill length (mm)  SE\" class=\"gt_row gt_right\">0.3</td>\n<td headers=\"Bill length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill length (mm)  lower.CL\" class=\"gt_row gt_right\">47.0, 48.0</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Bill depth (mm)\">Bill depth (mm)</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Bill depth (mm)  species\" class=\"gt_row gt_left\">Adelie</td>\n<td headers=\"Bill depth (mm)  emmean\" class=\"gt_row gt_right\">18.3</td>\n<td headers=\"Bill depth (mm)  SE\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"Bill depth (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill depth (mm)  lower.CL\" class=\"gt_row gt_right\">18.2, 18.5</td></tr>\n    <tr><td headers=\"Bill depth (mm)  species\" class=\"gt_row gt_left\">Chinstrap</td>\n<td headers=\"Bill depth (mm)  emmean\" class=\"gt_row gt_right\">18.4</td>\n<td headers=\"Bill depth (mm)  SE\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"Bill depth (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill depth (mm)  lower.CL\" class=\"gt_row gt_right\">18.2, 18.7</td></tr>\n    <tr><td headers=\"Bill depth (mm)  species\" class=\"gt_row gt_left\">Gentoo</td>\n<td headers=\"Bill depth (mm)  emmean\" class=\"gt_row gt_right\">15.0</td>\n<td headers=\"Bill depth (mm)  SE\" class=\"gt_row gt_right\">0.1</td>\n<td headers=\"Bill depth (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Bill depth (mm)  lower.CL\" class=\"gt_row gt_right\">14.8, 15.2</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Flipper length (mm)\">Flipper length (mm)</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Flipper length (mm)  species\" class=\"gt_row gt_left\">Adelie</td>\n<td headers=\"Flipper length (mm)  emmean\" class=\"gt_row gt_right\">190.0</td>\n<td headers=\"Flipper length (mm)  SE\" class=\"gt_row gt_right\">0.5</td>\n<td headers=\"Flipper length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Flipper length (mm)  lower.CL\" class=\"gt_row gt_right\">188.9, 191.0</td></tr>\n    <tr><td headers=\"Flipper length (mm)  species\" class=\"gt_row gt_left\">Chinstrap</td>\n<td headers=\"Flipper length (mm)  emmean\" class=\"gt_row gt_right\">195.8</td>\n<td headers=\"Flipper length (mm)  SE\" class=\"gt_row gt_right\">0.8</td>\n<td headers=\"Flipper length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Flipper length (mm)  lower.CL\" class=\"gt_row gt_right\">194.2, 197.4</td></tr>\n    <tr><td headers=\"Flipper length (mm)  species\" class=\"gt_row gt_left\">Gentoo</td>\n<td headers=\"Flipper length (mm)  emmean\" class=\"gt_row gt_right\">217.2</td>\n<td headers=\"Flipper length (mm)  SE\" class=\"gt_row gt_right\">0.6</td>\n<td headers=\"Flipper length (mm)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Flipper length (mm)  lower.CL\" class=\"gt_row gt_right\">216.0, 218.4</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"5\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Body mass (g)\">Body mass (g)</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Body mass (g)  species\" class=\"gt_row gt_left\">Adelie</td>\n<td headers=\"Body mass (g)  emmean\" class=\"gt_row gt_right\">3701</td>\n<td headers=\"Body mass (g)  SE\" class=\"gt_row gt_right\">38</td>\n<td headers=\"Body mass (g)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Body mass (g)  lower.CL\" class=\"gt_row gt_right\">3627, 3775</td></tr>\n    <tr><td headers=\"Body mass (g)  species\" class=\"gt_row gt_left\">Chinstrap</td>\n<td headers=\"Body mass (g)  emmean\" class=\"gt_row gt_right\">3733</td>\n<td headers=\"Body mass (g)  SE\" class=\"gt_row gt_right\">56</td>\n<td headers=\"Body mass (g)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Body mass (g)  lower.CL\" class=\"gt_row gt_right\">3623, 3843</td></tr>\n    <tr><td headers=\"Body mass (g)  species\" class=\"gt_row gt_left\">Gentoo</td>\n<td headers=\"Body mass (g)  emmean\" class=\"gt_row gt_right\">5076</td>\n<td headers=\"Body mass (g)  SE\" class=\"gt_row gt_right\">42</td>\n<td headers=\"Body mass (g)  df\" class=\"gt_row gt_right\">339</td>\n<td headers=\"Body mass (g)  lower.CL\" class=\"gt_row gt_right\">4994, 5158</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nWe can do similar to produce an overall \"F\" test for each model, testing the hypothesis that all species have equal means for a particular measure against the hypothesis that at least one pair of means is different. The `joint_tests()` function in `emmeans` does this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_tests <- penguin_models %>%\n  rowwise(outcome) %>%\n  reframe(\n    joint_tests(model) %>%\n      as_tibble()\n  )\n```\n:::\n\n\nThis is what the resulting data frame looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(penguin_tests)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 6\n  outcome             `model term`   df1   df2 F.ratio   p.value\n  <fct>               <chr>        <dbl> <dbl>   <dbl>     <dbl>\n1 Bill length (mm)    species          2   339    411. 2.69e- 91\n2 Bill depth (mm)     species          2   339    360. 1.51e- 84\n3 Flipper length (mm) species          2   339    595. 1.35e-111\n4 Body mass (g)       species          2   339    344. 2.89e- 82\n```\n:::\n:::\n\n\nAgain, this can be presented in a table using `gt()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_tests %>%\n  gt() %>%\n  fmt_number(F.ratio, decimals = 1) %>%\n  fmt_number(p.value, decimals = 3) %>%\n  cols_merge_range(df1, df2, sep = \", \") %>%\n  sub_small_vals(p.value, threshold = 0.001) %>%\n  cols_label(\n    outcome = \"Outcome\",\n    `model term` = \"Predictor\",\n    df1 = \"df\",\n    F.ratio = \"F\",\n    p.value = \"p-value\"\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"mpdhlutfqs\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mpdhlutfqs table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mpdhlutfqs thead, #mpdhlutfqs tbody, #mpdhlutfqs tfoot, #mpdhlutfqs tr, #mpdhlutfqs td, #mpdhlutfqs th {\n  border-style: none;\n}\n\n#mpdhlutfqs p {\n  margin: 0;\n  padding: 0;\n}\n\n#mpdhlutfqs .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mpdhlutfqs .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mpdhlutfqs .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mpdhlutfqs .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mpdhlutfqs .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mpdhlutfqs .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mpdhlutfqs .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mpdhlutfqs .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mpdhlutfqs .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mpdhlutfqs .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mpdhlutfqs .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#mpdhlutfqs .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mpdhlutfqs .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mpdhlutfqs .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mpdhlutfqs .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mpdhlutfqs .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mpdhlutfqs .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mpdhlutfqs .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mpdhlutfqs .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mpdhlutfqs .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mpdhlutfqs .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mpdhlutfqs .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#mpdhlutfqs .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mpdhlutfqs .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mpdhlutfqs .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mpdhlutfqs .gt_left {\n  text-align: left;\n}\n\n#mpdhlutfqs .gt_center {\n  text-align: center;\n}\n\n#mpdhlutfqs .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mpdhlutfqs .gt_font_normal {\n  font-weight: normal;\n}\n\n#mpdhlutfqs .gt_font_bold {\n  font-weight: bold;\n}\n\n#mpdhlutfqs .gt_font_italic {\n  font-style: italic;\n}\n\n#mpdhlutfqs .gt_super {\n  font-size: 65%;\n}\n\n#mpdhlutfqs .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mpdhlutfqs .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mpdhlutfqs .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mpdhlutfqs .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mpdhlutfqs .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mpdhlutfqs .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mpdhlutfqs .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Outcome\">Outcome</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Predictor\">Predictor</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"df\">df</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"F\">F</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p-value\">p-value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"outcome\" class=\"gt_row gt_center\">Bill length (mm)</td>\n<td headers=\"model term\" class=\"gt_row gt_left\">species</td>\n<td headers=\"df1\" class=\"gt_row gt_right\">2, 339</td>\n<td headers=\"F.ratio\" class=\"gt_row gt_right\">410.6</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">&lt;0.001</td></tr>\n    <tr><td headers=\"outcome\" class=\"gt_row gt_center\">Bill depth (mm)</td>\n<td headers=\"model term\" class=\"gt_row gt_left\">species</td>\n<td headers=\"df1\" class=\"gt_row gt_right\">2, 339</td>\n<td headers=\"F.ratio\" class=\"gt_row gt_right\">359.8</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">&lt;0.001</td></tr>\n    <tr><td headers=\"outcome\" class=\"gt_row gt_center\">Flipper length (mm)</td>\n<td headers=\"model term\" class=\"gt_row gt_left\">species</td>\n<td headers=\"df1\" class=\"gt_row gt_right\">2, 339</td>\n<td headers=\"F.ratio\" class=\"gt_row gt_right\">594.8</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">&lt;0.001</td></tr>\n    <tr><td headers=\"outcome\" class=\"gt_row gt_center\">Body mass (g)</td>\n<td headers=\"model term\" class=\"gt_row gt_left\">species</td>\n<td headers=\"df1\" class=\"gt_row gt_right\">2, 339</td>\n<td headers=\"F.ratio\" class=\"gt_row gt_right\">343.6</td>\n<td headers=\"p.value\" class=\"gt_row gt_right\">&lt;0.001</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nFinally, we often want to obtain comparisons between particular estimated quantities. In this example we use the `emmeans` package again for this, this time using the `pairs()` function to produce comparisons between all pairs of species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_pairs <- penguin_models %>%\n  rowwise(outcome) %>%\n  reframe(\n    emmeans(model, \"species\") %>%\n      pairs(infer = TRUE, reverse = TRUE, adjust = \"none\") %>%\n      as_tibble()\n  )\n```\n:::\n\n\nThe first few rows of the data frame look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(penguin_pairs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  outcome       contrast estimate    SE    df lower.CL upper.CL t.ratio  p.value\n  <fct>         <chr>       <dbl> <dbl> <dbl>    <dbl>    <dbl>   <dbl>    <dbl>\n1 Bill length … Chinstr…  10.0    0.432   339    9.19    10.9    23.2   4.23e-72\n2 Bill length … Gentoo …   8.71   0.360   339    8.01     9.42   24.2   5.33e-76\n3 Bill length … Gentoo …  -1.33   0.447   339   -2.21    -0.449  -2.97  3.18e- 3\n4 Bill depth (… Chinstr…   0.0742 0.164   339   -0.248    0.396   0.453 6.50e- 1\n5 Bill depth (… Gentoo …  -3.36   0.136   339   -3.63    -3.10  -24.7   7.93e-78\n6 Bill depth (… Gentoo …  -3.44   0.169   339   -3.77    -3.11  -20.3   1.59e-60\n```\n:::\n:::\n\n\nThese comparisons can be plotted or presented in a table using code very similar to what we used for the estimated means. The plot below also includes a dotted line indicating zero difference, which can be used as a visual indicator for whether comparisons are statistically significant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_pairs %>%\n  ggplot(aes(x = estimate, y = contrast, xmin = lower.CL, xmax = upper.CL)) +\n  geom_vline(xintercept = 0, linetype = \"dotted\") +\n  geom_errorbar(width = 0.5) +\n  geom_point() +\n  scale_y_discrete(limits = rev) +\n  facet_wrap(vars(outcome), nrow = 2, scales = \"free_x\") +\n  labs(\n    x = \"Difference in means\", \n    y = \"Contrast\",\n    caption = \"Error bars show 95% confidence interval for difference in mean.\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=1170}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}